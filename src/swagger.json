{
  "openapi": "3.0.1",
  "info": {
    "title": "API para o Sistema de Gestão de prontuários do CIAP",
    "description": "Essa API tem o objetivo de implementar os casos de uso, estrutura de segurança e outros elementos atinentes ao backend para a aplicação do CIAP",
    "contact": {
      "name": "Suporte",
      "email": "leonardocostapsi@gmail.com"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/employees": {
      "post": {
        "description": "Cria um funcionário",
        "tags": [
          "Funcionários"
        ],
        "requestBody": {
          "description": "Dados necessários para cadastro de um funcionário",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmployeeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Funcionário criado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateEmployeeResponse"
                }
              }
            }
          },
          "400": {
            "description": "O Funcionário já foi cadastrado."
          },
          "500": {
            "description": "Erro servidor."
          }
        }
      },
      "get": {
        "description": "Lista os funcionários cadastrados",
        "tags": [
          "Funcionários"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Funcionários listado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetEmployeeResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token inválido."
          },
          "404": {
            "description": "Nenhum funcionário encontrado."
          },
          "500": {
            "description": "Erro servidor."
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "description": "Autentica o funcionário na aplicação.",
        "tags": [
          "Funcionários"
        ],
        "requestBody": {
          "description": "O funcionário é autenticado na aplicação informando as suas credenciais de acesso.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCredentials"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login realizado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Email ou senha incorreta."
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      }
    },
    "/me": {
      "get": {
        "description": "Retorna os dados do funcionário logado",
        "tags": [
          "Funcionários"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successo.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEmployeeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token inválido."
          },
          "404": {
            "description": "Funcionário não encontrado."
          },
          "500": {
            "description": "Erro servidor."
          }
        }
      }
    },
    "/genders": {
      "post": {
        "description": "Cria uma opção de sexo na tabela genders.",
        "tags": [
          "Sexo"
        ],
        "requestBody": {
          "description": "Dados necessários para o cadastro de um sexo.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGender"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sexo criado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateGender"
                }
              }
            }
          },
          "400": {
            "description": "Esse sexo já foi cadastrado."
          },
          "500": {
            "description": "Erro servidor."
          }
        }
      }
    },
    "/maritalStatus": {
      "post": {
        "description": "Cria uma opção de estado civil na tabela marital_status.",
        "tags": [
          "Estado civil"
        ],
        "requestBody": {
          "description": "Dados necessários para o cadastro de um estado civil.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMarialStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Estado civil criado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateMaritalStatus"
                }
              }
            }
          },
          "400": {
            "description": "Esse estado civil já foi cadastrado."
          },
          "500": {
            "description": "Erro servidor."
          }
        }
      }
    },
    "/educationLevels": {
      "post": {
        "description": "Cria uma opção de escolaridade na tabela edication_levels.",
        "tags": [
          "Escolaridade"
        ],
        "requestBody": {
          "description": "Dados necessários para o cadastro de uma escolaridade.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEducationLevel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Escolaridade criada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateEducationLevel"
                }
              }
            }
          },
          "400": {
            "description": "Essa escolaridade já foi cadastrada."
          },
          "500": {
            "description": "Erro servidor."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateEmployeeRequest": {
        "type": "object",
        "properties": {
          "avatar": {
            "description": "Foto de perfil do funcionário",
            "type": "string",
            "example": "https://photografos.com.br/wp-content/uploads/2020/09/fotografia-para-perfil.jpg"
          },
          "fullname": {
            "description": "Nome completo do funcionário que será criado.",
            "type": "string",
            "example": "Leonardo da Silva Costa."
          },
          "birthdate": {
            "description": "Data de nascimento do funcionário que será criado.",
            "type": "string",
            "example": "20/01/2022"
          },
          "cpf": {
            "description": "CPF do funcionário que será criado.",
            "type": "string",
            "example": "49415961023"
          },
          "gender_id": {
            "description": "Identificador do sexo do funcionário que será criado.",
            "type": "string",
            "format": "uuid",
            "example": "6adae8b2-af95-4608-8974-f5b677b8a98c"
          },
          "email": {
            "description": "Email do funcinário que será criado.",
            "type": "string",
            "example": "leonardocostapsi@gmail.com"
          },
          "phones": {
            "description": "Números de telefone do funcionário que será criado.",
            "type": "array",
            "items": {
              "phone": {
                "type": "string"
              }
            },
            "example": "leonardocostapsi@gmail.com"
          },
          "address": {
            "type": "object",
            "properties": {
              "postal_code": {
                "type": "string",
                "description": "CEP",
                "example": "66635510",
                "required": true
              },
              "number": {
                "type": "string",
                "description": "Número da residência do funcionário que será criado.",
                "example": "53-A",
                "required": true
              }
            },
            "description": "Endereço do funcionário que será criado.",
            "example": {
              "postal_code": "66635510",
              "number": "53A"
            }
          },
          "marital_status_id": {
            "description": "Identificador do estado civil do funcionário que será criado.",
            "type": "string",
            "format": "uuid",
            "example": "6adae8b2-af95-4608-8974-f5b677b8a98c"
          },
          "education_level_id": {
            "description": "Identificador do nível de escolaridade do funcionário que será criado.",
            "type": "string",
            "format": "uuid",
            "example": "6adae8b2-af95-4608-8974-f5b677b8a98c"
          },
          "number_of_children": {
            "description": "Número de filhos do usuário que será criado.",
            "type": "number",
            "example": 0
          },
          "birthplace": {
            "description": "Local de nascimento do funcionário que será criado no formato cidade-estado.",
            "type": "string",
            "example": "Belém-PA"
          },
          "code_name": {
            "description": "Nome de guerra do funcionário que será criado",
            "type": "string",
            "example": "Leonardo"
          },
          "unit_id": {
            "description": "Identificador da opção referente a unidade a qual o funcionário pertence.",
            "type": "string",
            "format": "uuid",
            "example": "6adae8b2-af95-4608-8974-f5b677b8a98c"
          },
          "administrative_role_id": {
            "description": "Identificador da opção referente a função administrativa a qual o funcionário exerce. ex.: P1, P2, etc.",
            "type": "string",
            "format": "uuid",
            "example": "6adae8b2-af95-4608-8974-f5b677b8a98c"
          },
          "job_status_id": {
            "description": "Identificador da opção referente ao status do trabalho. Se está ativo ou inativo, por exemplo.",
            "type": "string",
            "format": "uuid",
            "example": "6adae8b2-af95-4608-8974-f5b677b8a98c"
          },
          "military_id": {
            "description": "RG do funcionário que será criado",
            "type": "string",
            "example": "40897"
          },
          "rank_id": {
            "description": "Identificar do nível hierárquico referente ao funicionário.",
            "type": "string",
            "example": "40daffff-083f-426e-8bcd-fd6b0af16457"
          },
          "board_id": {
            "description": "identificador do quadro do qual o funcionário que será cadastro pertence.",
            "type": "string",
            "example": "045f77db-0b57-42d4-87f7-d9da872ba141"
          },
          "specialty_id": {
            "description": "identificador da especialidade da qual o funcionário que será cadastro pertence.",
            "type": "string",
            "example": "1c4376d7-5f79-47fc-bb53-d4b32ed6c54b"
          }
        },
        "required": [
          "fullname",
          "first_phone",
          "gender_id"
        ]
      },
      "CreateEmployeeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Identificador do funcionário criado.",
            "type": "string",
            "format": "uuid",
            "example": "d563f847-75af-4ecf-9d72-09bfee78116d"
          },
          "avatar": {
            "description": "Foto de perfil do funcionário criado.",
            "type": "string",
            "example": "https://photografos.com.br/wp-content/uploads/2020/09/fotografia-para-perfil.jpg"
          },
          "fullname": {
            "description": "Nome completo do funcionário criado.",
            "type": "string",
            "example": "Leonardo da Silva Costa"
          },
          "birthdate": {
            "description": "Data de nascimento do funcionário criado.",
            "type": "string",
            "example": "20/01/2022"
          },
          "cpf": {
            "description": "CPF do funcionário criado.",
            "type": "string",
            "example": "49415961023"
          },
          "gender_id": {
            "description": "Identificador do sexo do funcionário criado.",
            "type": "string",
            "format": "uuid",
            "example": "6adae8b2-af95-4608-8974-f5b677b8a98c"
          },
          "email": {
            "description": "Email do funcionário criado.",
            "type": "string",
            "example": "leonardocostapsi@gmail.com"
          },
          "phones": {
            "description": "Números de telefone do funcionário que será criado.",
            "type": "array",
            "items": {
              "phone": {
                "type": "string"
              }
            },
            "example": [
              "91993294200",
              "91988165507"
            ]
          },
          "address": {
            "description": "Endereço do funcionário criado.",
            "type": "object",
            "properties": {
              "postal_code": {
                "type": "string",
                "description": "CEP",
                "required": true
              },
              "number": {
                "type": "string",
                "description": "Número da residência do funcionário criado.",
                "required": true
              }
            },
            "example": {
              "postal_code": "66635510",
              "number": 53
            }
          },
          "marital_status_id": {
            "description": "Identificador do estado civil do funcionário criado.",
            "type": "string",
            "format": "uuid",
            "example": "6adae8b2-af95-4608-8974-f5b677b8a98c"
          },
          "education_level_id": {
            "description": "Identificador do nível de escolaridade do funcionário criado.",
            "type": "string",
            "format": "uuid",
            "example": "6adae8b2-af95-4608-8974-f5b677b8a98c"
          },
          "number_of_children": {
            "description": "Número de filhos do funcionário criado.",
            "type": "number",
            "example": 0
          },
          "birthplace": {
            "description": "Local de nascimento do funcionário criado no formato cidade-estado.",
            "type": "string",
            "example": "Belém-PA"
          },
          "code_name": {
            "description": "Nome de guerra do funcionário",
            "type": "string",
            "example": "Leonardo"
          },
          "unit_id": {
            "description": "Identificador da opção referente a unidade a qual o funcionário pertence.",
            "type": "string",
            "format": "uuid",
            "example": "6adae8b2-af95-4608-8974-f5b677b8a98c"
          },
          "administrative_role_id": {
            "description": "Identificador da opção referente a função administrativa a qual o funcionário exerce. ex.: P1, P2, etc.",
            "type": "string",
            "format": "uuid",
            "example": "6adae8b2-af95-4608-8974-f5b677b8a98c"
          },
          "job_status_id": {
            "description": "Identificador da opção referente ao status do trabalho. Se está ativo ou inativo, por exemplo.",
            "type": "string",
            "format": "uuid",
            "example": "6adae8b2-af95-4608-8974-f5b677b8a98c"
          },
          "military_id": {
            "description": "RG do funcionário que será criado",
            "type": "string",
            "example": "40897"
          },
          "rank_id": {
            "description": "Identificar do nível hierárquico referente ao funicionário.",
            "type": "string",
            "example": "40daffff-083f-426e-8bcd-fd6b0af16457"
          },
          "board_id": {
            "description": "identificador do quadro do qual o funcionário que será cadastro pertence.",
            "type": "string",
            "example": "045f77db-0b57-42d4-87f7-d9da872ba141"
          },
          "specialty_id": {
            "description": "identificador da especialidade da qual o funcionário que será cadastro pertence.",
            "type": "string",
            "example": "1c4376d7-5f79-47fc-bb53-d4b32ed6c54b"
          },
          "created_at": {
            "description": "Data de criação do usuário criado.",
            "type": "string",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          }
        }
      },
      "GetEmployeeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Identificador do funcionário criado.",
            "type": "string",
            "format": "uuid",
            "example": "d563f847-75af-4ecf-9d72-09bfee78116d"
          },
          "avatar": {
            "description": "Foto de perfil do funcionário criado.",
            "type": "string",
            "example": "https://photografos.com.br/wp-content/uploads/2020/09/fotografia-para-perfil.jpg"
          },
          "fullname": {
            "description": "Nome completo do funcionário criado.",
            "type": "string",
            "example": "Leonardo da Silva Costa"
          },
          "birthdate": {
            "description": "Data de nascimento do funcionário criado.",
            "type": "string",
            "example": "20/01/2022"
          },
          "cpf": {
            "description": "CPF do funcionário criado.",
            "type": "string",
            "example": "49415961023"
          },
          "gender_id": {
            "description": "Identificador do sexo do funcionário criado.",
            "type": "string",
            "format": "uuid",
            "example": "6adae8b2-af95-4608-8974-f5b677b8a98c"
          },
          "email": {
            "description": "Email do funcionário criado.",
            "type": "string",
            "example": "leonardocostapsi@gmail.com"
          },
          "phones": {
            "description": "Números de telefone do funcionário que será criado.",
            "type": "array",
            "items": {
              "phone": {
                "type": "string"
              }
            },
            "example": [
              "91993294200",
              "91988165507"
            ]
          },
          "address": {
            "description": "Endereço do funcionário criado.",
            "type": "object",
            "properties": {
              "postal_code": {
                "type": "string",
                "description": "CEP",
                "required": true
              },
              "number": {
                "type": "string",
                "description": "Número da residência do funcionário criado.",
                "required": true
              }
            },
            "example": {
              "postal_code": "66635510",
              "number": 53
            }
          },
          "marital_status_id": {
            "description": "Identificador do estado civil do funcionário criado.",
            "type": "string",
            "format": "uuid",
            "example": "6adae8b2-af95-4608-8974-f5b677b8a98c"
          },
          "education_level_id": {
            "description": "Identificador do nível de escolaridade do funcionário criado.",
            "type": "string",
            "format": "uuid",
            "example": "6adae8b2-af95-4608-8974-f5b677b8a98c"
          },
          "number_of_children": {
            "description": "Número de filhos do funcionário criado.",
            "type": "number",
            "example": 0
          },
          "birthplace": {
            "description": "Local de nascimento do funcionário criado no formato cidade-estado.",
            "type": "string",
            "example": "Belém-PA"
          },
          "code_name": {
            "description": "Nome de guerra do funcionário",
            "type": "string",
            "example": "Leonardo"
          },
          "unit_id": {
            "description": "Identificador da opção referente a unidade a qual o funcionário pertence.",
            "type": "string",
            "format": "uuid",
            "example": "6adae8b2-af95-4608-8974-f5b677b8a98c"
          },
          "administrative_role_id": {
            "description": "Identificador da opção referente a função administrativa a qual o funcionário exerce. ex.: P1, P2, etc.",
            "type": "string",
            "format": "uuid",
            "example": "6adae8b2-af95-4608-8974-f5b677b8a98c"
          },
          "job_status_id": {
            "description": "Identificador da opção referente ao status do trabalho. Se está ativo ou inativo, por exemplo.",
            "type": "string",
            "format": "uuid",
            "example": "6adae8b2-af95-4608-8974-f5b677b8a98c"
          },
          "military_id": {
            "description": "RG do funcionário que será criado",
            "type": "string",
            "example": "40897"
          },
          "rank_id": {
            "description": "Identificar do nível hierárquico referente ao funicionário.",
            "type": "string",
            "example": "40daffff-083f-426e-8bcd-fd6b0af16457"
          },
          "board_id": {
            "description": "identificador do quadro do qual o funcionário que será cadastro pertence.",
            "type": "string",
            "example": "045f77db-0b57-42d4-87f7-d9da872ba141"
          },
          "specialty_id": {
            "description": "identificador da especialidade da qual o funcionário que será cadastro pertence.",
            "type": "string",
            "example": "1c4376d7-5f79-47fc-bb53-d4b32ed6c54b"
          },
          "created_at": {
            "description": "Data de criação do usuário criado.",
            "type": "string",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          }
        }
      },
      "EmployeeCredentials": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email do funcionário.",
            "example": "leonardocostapsi@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "A senha do funcionário."
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Nome do funcionário logado",
                "example": "Leonardo Costa"
              },
              "email": {
                "type": "string",
                "description": "Email do funcionário logado",
                "example": "leonardocostapsi@gmail.com"
              }
            }
          },
          "token": {
            "type": "string",
            "description": "Token concedido ao funcionário logado",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2NzY3Mjc4MzQsImV4cCI6MTY3NjgxNDIzNCwic3ViIjoiOSJ9.dhue4XHYW4mNBGqKfrp6QG15xO3QcieGvzSAjbXdizw"
          }
        }
      },
      "Phone": {
        "description": "Objeto que armazena um número de telefone do usuário.",
        "type": "object",
        "properties": {
          "phone": {
            "type": "string",
            "example": "993294200"
          }
        }
      },
      "UpdateInformation": {
        "description": "Dados de atualização referente ao cadastro do usuário",
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "employeeId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "example": [
          {
            "created_at": "2017-07-21T17:32:28Z",
            "employeeId": "6adae8b2-af95-4608-8974-f5b677b8a98c"
          }
        ]
      },
      "CreateGender": {
        "description": "Objeto que armazena as opções de sexo.",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "id": "6adae8b2-af95-4608-8974-f5b677b8a98c",
          "name": "Masculino"
        }
      },
      "CreateEducationLevel": {
        "description": "Objeto que armazena as opções de escolaridade.",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "id": "6adae8b2-af95-4608-8974-f5b677b8a98c",
          "name": "Médio completo."
        }
      },
      "CreateMaritalStatus": {
        "description": "Objeto que armazena as opções de estado civil.",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "id": "6adae8b2-af95-4608-8974-f5b677b8a98c",
          "name": "Solteiro(a)"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "description": "Autenticação utilizando JWT",
        "type": "http",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}